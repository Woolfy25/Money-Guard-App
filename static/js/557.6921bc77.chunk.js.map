{"version":3,"file":"static/js/557.6921bc77.chunk.js","mappings":"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","sources":["components/Buttons/MainButton.jsx","components/Buttons/SecondaryButton.jsx","webpack://money-guard-app/./src/components/Currency/Currency.module.css?c503","components/Currency/Currency.jsx","hooks/useWidth.js","webpack://money-guard-app/./src/pages/DashboardPage/DashboardPage.module.css?b183","webpack://money-guard-app/./src/components/Layout/Layout.module.css?3701","webpack://money-guard-app/./src/components/QuitCheck/QuitCheck.module.css?4d1c","components/QuitCheck/QuitCheck.jsx","components/Layout/Layout.jsx","webpack://money-guard-app/./src/components/Sidebar/Sidebar.module.css?6ffa","redux/user/selectors.js","components/Sidebar/Sidebar.jsx","webpack://money-guard-app/./src/components/AddTransaction/AddTransaction.module.css?44ed","components/AddTransaction/AddTransaction.jsx","webpack://money-guard-app/./src/components/EditTransaction/EditTransaction.module.css?fa5d","redux/modal/selectors.js","components/EditTransaction/EditTransaction.jsx","pages/DashboardPage/DashboardPage.jsx","redux/transactions/selectors.js","webpack://money-guard-app/./src/components/Buttons/Buttons.module.css?0481"],"sourcesContent":["import React from \"react\";\r\nimport css from \"./Buttons.module.css\";\r\n\r\nconst MainButton = ({ type, text, onClick }) => {\r\n  return (\r\n    <button className={css.main} type={type} onClick={onClick}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MainButton;\r\n","import React from \"react\";\r\nimport css from \"./Buttons.module.css\";\r\n\r\nconst SecondaryButton = ({ type, text, onClick }) => {\r\n  return (\r\n    <button className={css.secondary} type={type} onClick={onClick}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SecondaryButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Currency_container__J2EsB\",\"styledTable\":\"Currency_styledTable__irzpg\",\"chart\":\"Currency_chart__qXSxk\"};","import React, { useEffect, useRef } from \"react\";\r\nimport useWindowSize from \"../../hooks/useWidth\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport css from \"./Currency.module.css\";\r\nimport { Chart } from \"chart.js/auto\";\r\n\r\nconst Currency = () => {\r\n  const { width } = useWindowSize();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === \"/currency\" && width > 768) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [width, navigate, location.pathname]);\r\n\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const ctx = chartRef.current.getContext(\"2d\");\r\n\r\n    const exchangeRateData = {\r\n      labels: [\"Day 1\", \"Day 2\", \"Day 3\", \"Day 4\", \"Day 5\", \"Day 6\"],\r\n      datasets: [\r\n        {\r\n          label: \"USD\",\r\n          data: [0.7, 1.12, 0.75, 1, 0.25, 1.1],\r\n          borderColor: \"rgba(255, 255, 255, 0.60)\",\r\n          backgroundColor: \"rgba(255, 255, 255, 0.60)\",\r\n          borderWidth: 2,\r\n          fill: true,\r\n        },\r\n        {\r\n          label: \"EUR\",\r\n          data: [0.25, 1.08, 1.1, 0.6, 1.15, 0.8],\r\n          borderColor: \"#FF868D\",\r\n          backgroundColor: \"#FF868D\",\r\n          borderWidth: 2,\r\n          fill: true,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const config = {\r\n      type: \"bar\",\r\n      data: exchangeRateData,\r\n      options: {\r\n        scales: {\r\n          x: {\r\n            ticks: {\r\n              color: \"white\",\r\n            },\r\n            title: {\r\n              color: \"white\",\r\n            },\r\n          },\r\n          y: {\r\n            ticks: {\r\n              color: \"white\",\r\n            },\r\n            title: {\r\n              color: \"white\",\r\n            },\r\n          },\r\n        },\r\n        plugins: {\r\n          legend: {\r\n            labels: {\r\n              color: \"white\",\r\n            },\r\n            display: true,\r\n            position: \"top\",\r\n          },\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n      },\r\n    };\r\n\r\n    const myChart = new Chart(ctx, config);\r\n\r\n    return () => {\r\n      myChart.destroy();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <table className={css.styledTable}>\r\n        <thead>\r\n          <tr>\r\n            <th>Currency</th>\r\n            <th>Purcase</th>\r\n            <th>Sale</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>USD</td>\r\n            <td>27.55</td>\r\n            <td>27.65</td>\r\n          </tr>\r\n          <tr>\r\n            <td>EUR</td>\r\n            <td>30.00</td>\r\n            <td>30.10</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div className={css.chart}>\r\n        <canvas ref={chartRef}></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Currency;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction useWindowSize() {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: window.innerWidth,\r\n  });\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({ width: window.innerWidth });\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowSize;\r\n}\r\n\r\nexport default useWindowSize;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dashboardBackground\":\"DashboardPage_dashboardBackground__uY7QE\",\"dashboardContainer\":\"DashboardPage_dashboardContainer__E759Q\",\"layoutContainer\":\"DashboardPage_layoutContainer__XA8Xn\",\"sideBarContainer\":\"DashboardPage_sideBarContainer__khYSi\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Layout_container__lkjJe\",\"logo\":\"Layout_logo__WY2LI\",\"infoContainer\":\"Layout_infoContainer__s+sF6\",\"name\":\"Layout_name__wBR7z\",\"verticalSvg\":\"Layout_verticalSvg__utbSj\",\"logOutContainer\":\"Layout_logOutContainer__Vjxtf\",\"text\":\"Layout_text__C90fN\",\"exitSvg\":\"Layout_exitSvg__GD06T\"};","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"QuitCheck_overlay__7xXmA\",\"overlayBlur\":\"QuitCheck_overlayBlur__ppMpQ\",\"container\":\"QuitCheck_container__zFpYK\",\"logo\":\"QuitCheck_logo__Bv26z\",\"text\":\"QuitCheck_text__e3kC9\",\"buttons\":\"QuitCheck_buttons__GN4yK\"};","import React from \"react\";\r\nimport MainButton from \"../Buttons/MainButton\";\r\nimport SecondaryButton from \"../Buttons/SecondaryButton\";\r\n\r\nimport css from \"./QuitCheck.module.css\";\r\nimport logo from \"../..//images/MoneyGuardLogo.png\";\r\n\r\nconst QuitCheck = ({ confirmLogout, cancelLogout }) => {\r\n  return (\r\n    <div className={css.overlay}>\r\n      <div className={css.overlayBlur}></div>\r\n      <div className={css.container}>\r\n        <img src={logo} alt=\"Money Guard Logo\" className={css.logo} />\r\n        <p className={css.text}>Are you sure you want to log out?</p>\r\n        <div className={css.buttons}>\r\n          <MainButton type=\"Submit\" text=\"LOGOUT\" onClick={confirmLogout} />\r\n          <SecondaryButton type=\"button\" text=\"CANCEL\" onClick={cancelLogout} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuitCheck;\r\n","import React, { useState } from \"react\";\r\nimport css from \"./Layout.module.css\";\r\nimport logo from \"../../images/MoneyGuardLogo.png\";\r\n\r\nimport QuitCheck from \"../QuitCheck/QuitCheck\";\r\n\r\nimport { selectUser } from \"../../redux/auth/selectors\";\r\nimport { logout } from \"../../redux/auth/operations\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { PiLineVertical } from \"react-icons/pi\";\r\nimport { RxExit } from \"react-icons/rx\";\r\n\r\nconst Layout = () => {\r\n  const dispatch = useDispatch();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handleLogoutClick = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const confirmLogout = () => {\r\n    dispatch(logout());\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const cancelLogout = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const name = useSelector(selectUser);\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <img\r\n        className={css.logo}\r\n        src={logo}\r\n        alt=\"Money Guard Logo\"\r\n        loading=\"lazy\"\r\n      />\r\n      <div className={css.infoContainer}>\r\n        <p className={css.name}>{name.username}</p>\r\n        <PiLineVertical className={css.verticalSvg} />\r\n        <button className={css.logOutContainer} onClick={handleLogoutClick}>\r\n          <RxExit className={css.exitSvg} />\r\n          <span className={css.text}>Exit</span>\r\n        </button>\r\n      </div>\r\n      {isModalOpen && (\r\n        <QuitCheck confirmLogout={confirmLogout} cancelLogout={cancelLogout} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Sidebar_container__DiGVN\",\"navigation\":\"Sidebar_navigation__jw+Zj\",\"navigationContainer\":\"Sidebar_navigationContainer__lIVqt\",\"title\":\"Sidebar_title__fT8E0\",\"svgs\":\"Sidebar_svgs__A7rpC\",\"activeSvg\":\"Sidebar_activeSvg__UnOSb\",\"balanceContainer\":\"Sidebar_balanceContainer__2sDJk\",\"balanceText\":\"Sidebar_balanceText__PTG4s\",\"balanceTextLoading\":\"Sidebar_balanceTextLoading__iqv7w\",\"balance\":\"Sidebar_balance__LXVVy\",\"navigationContainerCurrency\":\"Sidebar_navigationContainerCurrency__cpQPy\"};","export const selectUserName = (state) => state.user.user.username;\r\nexport const selectUserBalance = (state) => state.user.user.balance;\r\nexport const selectErrorUser = (state) => state.user.error;\r\nexport const selectIsUserLoading = (state) => state.user.isLoading;\r\n","import React, { useEffect } from \"react\";\r\nimport css from \"./Sidebar.module.css\";\r\n\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport {\r\n  selectUserBalance,\r\n  selectIsUserLoading,\r\n} from \"../../redux/user/selectors\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { fetchCurrentUser } from \"../../redux/user/operations\";\r\nimport { selectTransactions } from \"../../redux/transactions/selectors\";\r\n\r\nimport { FaHouse } from \"react-icons/fa6\";\r\nimport { BiStats } from \"react-icons/bi\";\r\nimport { LuDollarSign } from \"react-icons/lu\";\r\n\r\nconst Sidebar = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const isActive = (path) => {\r\n    if (\r\n      (location.pathname === \"/\" && path === \"/home\") ||\r\n      location.pathname === path\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const transactions = useSelector(selectTransactions);\r\n  const userBalance = useSelector(selectUserBalance);\r\n  const isUserLoading = useSelector(selectIsUserLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCurrentUser());\r\n  }, [transactions, dispatch]);\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <div className={css.navigation}>\r\n        <div\r\n          className={css.navigationContainer}\r\n          onClick={() => {\r\n            navigate(\"/home\");\r\n          }}\r\n        >\r\n          <FaHouse className={isActive(\"/home\") ? css.activeSvg : css.svgs} />\r\n          <p className={css.title}>Home</p>\r\n        </div>\r\n        <div\r\n          className={css.navigationContainer}\r\n          onClick={() => {\r\n            navigate(\"/statistics\");\r\n          }}\r\n        >\r\n          <BiStats\r\n            className={isActive(\"/statistics\") ? css.activeSvg : css.svgs}\r\n          />\r\n          <p className={css.title}>Statistics</p>\r\n        </div>\r\n        <div className={css.navigationContainerCurrency}>\r\n          <LuDollarSign\r\n            className={isActive(\"/currency\") ? css.activeSvg : css.svgs}\r\n            onClick={() => {\r\n              navigate(\"/currency\");\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={css.balanceContainer}>\r\n        <p className={css.balanceText}>Your balance</p>\r\n        {isUserLoading ? (\r\n          <p className={css.balanceTextLoading}>Loading balance...</p>\r\n        ) : (\r\n          <p className={css.balance}>\r\n            ${\" \"}\r\n            {userBalance !== null && userBalance !== undefined\r\n              ? userBalance.toFixed(2)\r\n              : \"0.00\"}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"AddTransaction_overlay__TlXao\",\"overlayBlur\":\"AddTransaction_overlayBlur__U04vL\",\"container\":\"AddTransaction_container__ieQv5\",\"title\":\"AddTransaction_title__qOQsR\",\"toggleContainer\":\"AddTransaction_toggleContainer__jJ+0H\",\"toggleInput\":\"AddTransaction_toggleInput__CralT\",\"toggleLable\":\"AddTransaction_toggleLable__hAf1C\",\"toggleSlider\":\"AddTransaction_toggleSlider__SbNae\",\"toggleSliderSvg\":\"AddTransaction_toggleSliderSvg__-Jp1k\",\"toggleOption\":\"AddTransaction_toggleOption__AJu9c\",\"income\":\"AddTransaction_income__zQw3l\",\"active\":\"AddTransaction_active__bMjip\",\"expense\":\"AddTransaction_expense__h02wd\",\"selectionContainer\":\"AddTransaction_selectionContainer__53eNt\",\"buttons\":\"AddTransaction_buttons__yXgA6\",\"dropdown\":\"AddTransaction_dropdown__mvmhf\",\"dropdownHeader\":\"AddTransaction_dropdownHeader__ujzWX\",\"arrow\":\"AddTransaction_arrow__suVQi\",\"open\":\"AddTransaction_open__OkdIk\",\"dropdownList\":\"AddTransaction_dropdownList__bb0lC\",\"dropdownOption\":\"AddTransaction_dropdownOption__pg2ZS\",\"overlayBlurDrop\":\"AddTransaction_overlayBlurDrop__iRqqb\",\"formElementsContainer\":\"AddTransaction_formElementsContainer__ogS-N\",\"formElements\":\"AddTransaction_formElements__PU-xN\",\"formElementsComment\":\"AddTransaction_formElementsComment__v4Ppv\",\"disabled\":\"AddTransaction_disabled__MwoYH\"};","import React, { useState } from \"react\";\r\nimport css from \"./AddTransaction.module.css\";\r\nimport MainButton from \"../Buttons/MainButton\";\r\nimport SecondaryButton from \"../Buttons/SecondaryButton\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Notiflix from \"notiflix\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { closeAddModal } from \"../../redux/modal/modalSlice\";\r\nimport { postTransaction } from \"../../redux/transactions/operations\";\r\nimport { selectTransCategories } from \"../../redux/transactions/selectors\";\r\n\r\nimport { HiOutlineMinus } from \"react-icons/hi2\";\r\nimport { GoPlus } from \"react-icons/go\";\r\nimport { RiArrowDownWideFill } from \"react-icons/ri\";\r\n\r\nconst AddTransactionModal = () => {\r\n  const [isToggled, setIsToggled] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(\"Select category\");\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [comment, setComment] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const categories = useSelector(selectTransCategories);\r\n\r\n  const options = [\r\n    \"Main expenses\",\r\n    \"Products\",\r\n    \"Car\",\r\n    \"Self care\",\r\n    \"Child care\",\r\n    \"Household products\",\r\n    \"Education\",\r\n    \"Leisure\",\r\n    \"Entertainment\",\r\n    \"Other expenses\",\r\n  ];\r\n\r\n  const toggleDropdown = () => {\r\n    if (!isToggled) return;\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleOptionClick = (option) => {\r\n    setSelectedOption(option);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleToggleChange = () => {\r\n    setIsToggled((prevState) => {\r\n      const newToggledState = !prevState;\r\n      setSelectedOption(\"Select category\");\r\n      return newToggledState;\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const selectedCategory = categories.find(\r\n      (cat) => cat.name === selectedOption\r\n    );\r\n    const categoryId = selectedCategory\r\n      ? selectedCategory.id\r\n      : categories.find((cat) => cat.name === \"Income\")?.id;\r\n    if (!categoryId) {\r\n      Notiflix.Notify.failure(\"Please select a valid category.\");\r\n      return;\r\n    }\r\n    const transactionData = {\r\n      transactionDate: selectedDate\r\n        ? selectedDate.toISOString().split(\"T\")[0]\r\n        : null,\r\n      type: isToggled ? \"EXPENSE\" : \"INCOME\",\r\n      categoryId: categoryId,\r\n      comment: comment,\r\n      amount: isToggled\r\n        ? -Math.abs(parseFloat(amount))\r\n        : Math.abs(parseFloat(amount)),\r\n    };\r\n\r\n    dispatch(postTransaction(transactionData));\r\n    dispatch(closeAddModal());\r\n  };\r\n\r\n  return (\r\n    <div className={css.overlay}>\r\n      <div className={css.overlayBlur}></div>\r\n      <div className={css.container}>\r\n        <h2 className={css.title}>Add transaction</h2>\r\n        <div className={css.toggleContainer}>\r\n          <span\r\n            className={`${css.toggleOption} ${css.income} ${\r\n              isToggled ? css.active : \"\"\r\n            }`}\r\n          >\r\n            Income\r\n          </span>\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"toggle\"\r\n            checked={isToggled}\r\n            onChange={handleToggleChange}\r\n            className={css.toggleInput}\r\n          />\r\n          <label htmlFor=\"toggle\" className={css.toggleLable}>\r\n            <span\r\n              className={css.toggleSlider}\r\n              style={{ left: isToggled ? \"45px\" : \"-5px\" }}\r\n            >\r\n              {isToggled ? (\r\n                <HiOutlineMinus className={css.toggleSliderSvg} />\r\n              ) : (\r\n                <GoPlus className={css.toggleSliderSvg} />\r\n              )}\r\n            </span>\r\n          </label>\r\n          <span className={`${css.toggleOption} ${css.expense}`}>Expense</span>\r\n        </div>\r\n        <form className={css.selectionContainer} onSubmit={handleSubmit}>\r\n          <div className={css.dropdown}>\r\n            <div\r\n              className={`${css.dropdownHeader} ${\r\n                isToggled ? \"\" : css.disabled\r\n              }`}\r\n              onClick={isToggled ? toggleDropdown : null}\r\n            >\r\n              <span>{selectedOption}</span>\r\n              <RiArrowDownWideFill\r\n                className={`${css.arrow} ${isOpen ? css.open : \"\"}`}\r\n              />\r\n            </div>\r\n            {isOpen && (\r\n              <div className={css.dropdownList}>\r\n                <div className={css.overlayBlurDrop}></div>\r\n                {options.map((option) => (\r\n                  <div\r\n                    key={option}\r\n                    className={css.dropdownOption}\r\n                    onClick={() => handleOptionClick(option)}\r\n                  >\r\n                    {option}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className={css.formElementsContainer}>\r\n            <input\r\n              name=\"sum\"\r\n              type=\"text\"\r\n              placeholder=\"0.00\"\r\n              className={css.formElements}\r\n              onChange={(event) => setAmount(event.target.value)}\r\n            />\r\n            <DatePicker\r\n              className={css.formElements}\r\n              selected={selectedDate}\r\n              onChange={(date) => setSelectedDate(date)}\r\n              dateFormat=\"yyyy/MM/dd\"\r\n              placeholderText=\"Select the date!\"\r\n            />\r\n          </div>\r\n          <input\r\n            name=\"comment\"\r\n            type=\"text\"\r\n            placeholder=\"Comment\"\r\n            className={css.formElementsComment}\r\n            onChange={(event) => setComment(event.target.value)}\r\n          />\r\n          <div className={css.buttons}>\r\n            <MainButton type=\"Submit\" text=\"ADD\" />\r\n            <SecondaryButton\r\n              type=\"button\"\r\n              text=\"CANCEL\"\r\n              onClick={() => dispatch(closeAddModal())}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTransactionModal;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"EditTransaction_overlay__6d1zx\",\"overlayBlur\":\"EditTransaction_overlayBlur__IK5ik\",\"container\":\"EditTransaction_container__mlIIp\",\"title\":\"EditTransaction_title__WN7yf\",\"toggleContainer\":\"EditTransaction_toggleContainer__c1Nm2\",\"breaker\":\"EditTransaction_breaker__OUeRB\",\"toggleIncome\":\"EditTransaction_toggleIncome__3ccVB\",\"toggleExpense\":\"EditTransaction_toggleExpense__4BVm6\",\"toggleOption\":\"EditTransaction_toggleOption__1YNDP\",\"income\":\"EditTransaction_income__X-jR7\",\"expense\":\"EditTransaction_expense__hkeC+\",\"selectionContainer\":\"EditTransaction_selectionContainer__Udocn\",\"buttons\":\"EditTransaction_buttons__Uin17\",\"dropdown\":\"EditTransaction_dropdown__BlkEP\",\"dropdownHeader\":\"EditTransaction_dropdownHeader__KADpX\",\"arrow\":\"EditTransaction_arrow__TYbQj\",\"open\":\"EditTransaction_open__3Z+mL\",\"dropdownList\":\"EditTransaction_dropdownList__1AHFc\",\"dropdownOption\":\"EditTransaction_dropdownOption__8yjU5\",\"overlayBlurDrop\":\"EditTransaction_overlayBlurDrop__wuuPu\",\"formElementsContainer\":\"EditTransaction_formElementsContainer__QS3zq\",\"formElements\":\"EditTransaction_formElements__WaxvI\",\"formElementsComment\":\"EditTransaction_formElementsComment__-qa+n\",\"disabled\":\"EditTransaction_disabled__ONwp4\"};","export const selectEditId = (state) => state.modal.transactionId;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport css from \"./EditTransaction.module.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Notiflix from \"notiflix\";\r\n\r\nimport MainButton from \"../Buttons/MainButton\";\r\nimport SecondaryButton from \"../Buttons/SecondaryButton\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { closeEditModal } from \"../../redux/modal/modalSlice\";\r\nimport { editTransaction } from \"../../redux/transactions/operations\";\r\nimport {\r\n  selectTransCategories,\r\n  selectTransactions,\r\n} from \"../../redux/transactions/selectors\";\r\nimport { selectEditId } from \"../../redux/modal/selectors\";\r\n\r\nimport { RiArrowDownWideFill } from \"react-icons/ri\";\r\n\r\nconst EditTransactionModal = () => {\r\n  const [isToggled, setIsToggled] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(\"Select category\");\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [incomeChecked, setIncomeChecked] = useState(true);\r\n  const [expenseChecked, setExpenseChecked] = useState(false);\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [comment, setComment] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const categories = useSelector(selectTransCategories);\r\n  const transactions = useSelector(selectTransactions);\r\n  const transactionId = useSelector(selectEditId);\r\n\r\n  useEffect(() => {\r\n    const transaction = transactions.find(\r\n      (trans) => trans.id === transactionId\r\n    );\r\n    if (transaction) {\r\n      setSelectedDate(new Date(transaction.transactionDate));\r\n      setAmount(Math.abs(transaction.amount).toString());\r\n      setComment(transaction.comment);\r\n      setSelectedOption(\r\n        categories.find((cat) => cat.id === transaction.categoryId)?.name ||\r\n          \"Select category\"\r\n      );\r\n      if (transaction.type === \"EXPENSE\") {\r\n        setExpenseChecked(true);\r\n        setIncomeChecked(false);\r\n        setIsToggled(true);\r\n      } else {\r\n        setIncomeChecked(true);\r\n        setExpenseChecked(false);\r\n        setIsToggled(false);\r\n      }\r\n    }\r\n  }, [transactionId, transactions, categories]);\r\n\r\n  const options = [\r\n    \"Main expenses\",\r\n    \"Products\",\r\n    \"Car\",\r\n    \"Self care\",\r\n    \"Child care\",\r\n    \"Household products\",\r\n    \"Education\",\r\n    \"Leisure\",\r\n  ];\r\n\r\n  const toggleDropdown = () => {\r\n    if (incomeChecked) return;\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleOptionClick = (option) => {\r\n    setSelectedOption(option);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const selectedCategory = categories.find(\r\n      (cat) => cat.name === selectedOption\r\n    );\r\n    const categoryId = selectedCategory\r\n      ? selectedCategory.id\r\n      : categories.find((cat) => cat.name === \"Income\")?.id;\r\n    if (!categoryId) {\r\n      Notiflix.Notify.failure(\"Please select a valid category.\");\r\n      return;\r\n    }\r\n    const transactionData = {\r\n      transactionDate: selectedDate\r\n        ? selectedDate.toISOString().split(\"T\")[0]\r\n        : null,\r\n      type: isToggled ? \"EXPENSE\" : \"INCOME\",\r\n      categoryId: categoryId,\r\n      comment: comment,\r\n      amount: isToggled\r\n        ? -Math.abs(parseFloat(amount))\r\n        : Math.abs(parseFloat(amount)),\r\n    };\r\n\r\n    dispatch(editTransaction({ transactionId, transaction: transactionData }));\r\n    dispatch(closeEditModal());\r\n  };\r\n\r\n  return (\r\n    <div className={css.overlay}>\r\n      <div className={css.overlayBlur}></div>\r\n      <div className={css.container}>\r\n        <h2 className={css.title}>Edit transaction</h2>\r\n        <div className={css.toggleContainer}>\r\n          <label\r\n            htmlFor=\"toggleIncome\"\r\n            className={`${css.toggleOption} ${incomeChecked ? css.income : \"\"}`}\r\n          >\r\n            Income\r\n          </label>\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"toggleIncome\"\r\n            className={css.toggleIncome}\r\n          />\r\n          <span className={css.breaker}>/</span>\r\n          <label\r\n            htmlFor=\"toggleExpense\"\r\n            className={`${css.toggleOption} ${\r\n              expenseChecked ? css.expense : \"\"\r\n            }`}\r\n          >\r\n            Expense\r\n          </label>\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"toggleExpense\"\r\n            className={css.toggleIncome}\r\n          />\r\n        </div>\r\n        <form className={css.selectionContainer} onSubmit={handleSubmit}>\r\n          <div className={css.dropdown}>\r\n            <div\r\n              className={`${css.dropdownHeader} ${\r\n                incomeChecked ? css.disabled : \"\"\r\n              }`}\r\n              onClick={toggleDropdown}\r\n            >\r\n              <span>{selectedOption}</span>\r\n              <RiArrowDownWideFill\r\n                className={`${css.arrow} ${isOpen ? css.open : \"\"}`}\r\n              />\r\n            </div>\r\n            {isOpen && (\r\n              <div className={css.dropdownList}>\r\n                <div className={css.overlayBlurDrop}></div>\r\n                {options.map((option) => (\r\n                  <div\r\n                    key={option}\r\n                    className={css.dropdownOption}\r\n                    onClick={() => handleOptionClick(option)}\r\n                  >\r\n                    {option}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className={css.formElementsContainer}>\r\n            <input\r\n              name=\"sum\"\r\n              type=\"text\"\r\n              placeholder=\"0.00\"\r\n              value={amount}\r\n              className={css.formElements}\r\n              onChange={(event) => setAmount(event.target.value)}\r\n            />\r\n            <DatePicker\r\n              className={css.formElements}\r\n              selected={selectedDate}\r\n              onChange={(date) => setSelectedDate(date)}\r\n              dateFormat=\"yyyy/MM/dd\"\r\n              placeholderText=\"Select the date!\"\r\n            />\r\n          </div>\r\n          <input\r\n            name=\"comment\"\r\n            type=\"text\"\r\n            placeholder=\"Comment\"\r\n            className={css.formElementsComment}\r\n            onChange={(event) => setComment(event.target.value)}\r\n            value={comment}\r\n          />\r\n          <div className={css.buttons}>\r\n            <MainButton type=\"Submit\" text=\"SAVE\" />\r\n            <SecondaryButton\r\n              type=\"button\"\r\n              text=\"CANCEL\"\r\n              onClick={() => dispatch(closeEditModal())}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTransactionModal;\r\n","import React from \"react\";\r\nimport css from \"./DashboardPage.module.css\";\r\n\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\r\nimport Currency from \"../../components/Currency/Currency\";\r\nimport AddTransactionModal from \"../../components/AddTransaction/AddTransaction\";\r\nimport EditTransactionModal from \"../../components/EditTransaction/EditTransaction\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport useWindowSize from \"../../hooks/useWidth\";\r\n\r\nconst Dashboard = ({\r\n  desktopChildren,\r\n  mobileChildren,\r\n  currencyPage,\r\n  statisticsPage,\r\n}) => {\r\n  const { width } = useWindowSize();\r\n  const isModalAddOpen = useSelector((state) => state.modal.isModalAddOpen);\r\n  const isModalEditOpen = useSelector((state) => state.modal.isModalEditOpen);\r\n\r\n  return (\r\n    <div className={css.dashboardBackground}>\r\n      <div className={css.dashboardContainer}>\r\n        <Layout></Layout>\r\n        {isModalAddOpen ? <AddTransactionModal /> : null}\r\n        {isModalEditOpen ? <EditTransactionModal /> : null}\r\n        <div className={css.layoutContainer}>\r\n          <div className={css.sideBarContainer}>\r\n            <Sidebar />\r\n            {width >= 769 ? <Currency /> : currencyPage}\r\n          </div>\r\n          {width >= 425 ? desktopChildren : mobileChildren}\r\n          {statisticsPage}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","export const selectTransactions = (state) => state.transactions.transactions;\r\nexport const selectisTransactionLoading = (state) =>\r\n  state.transactions.isLoading;\r\nexport const selectTransCategories = (state) => state.transactions.categories;\r\nexport const selectTransSummary = (state) => state.transactions.summary;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Buttons_main__GGBqx\",\"secondary\":\"Buttons_secondary__wTkPt\"};"],"names":["_ref","type","text","onClick","_jsx","className","css","main","children","secondary","Currency","width","useWindowSize","navigate","useNavigate","location","useLocation","useEffect","pathname","chartRef","useRef","ctx","current","getContext","config","data","labels","datasets","label","borderColor","backgroundColor","borderWidth","fill","options","scales","x","ticks","color","title","y","plugins","legend","display","position","responsive","maintainAspectRatio","myChart","Chart","destroy","_jsxs","ref","windowSize","setWindowSize","useState","window","innerWidth","handleResize","addEventListener","removeEventListener","confirmLogout","cancelLogout","src","logo","alt","MainButton","SecondaryButton","Layout","dispatch","useDispatch","isModalOpen","setIsModalOpen","name","useSelector","selectUser","loading","username","PiLineVertical","handleLogoutClick","RxExit","QuitCheck","logout","selectUserBalance","state","user","balance","selectIsUserLoading","isLoading","Sidebar","isActive","path","transactions","selectTransactions","userBalance","isUserLoading","fetchCurrentUser","FaHouse","BiStats","LuDollarSign","undefined","toFixed","AddTransactionModal","isToggled","setIsToggled","isOpen","setIsOpen","selectedOption","setSelectedOption","selectedDate","setSelectedDate","amount","setAmount","comment","setComment","categories","selectTransCategories","id","checked","onChange","handleToggleChange","prevState","newToggledState","htmlFor","style","left","HiOutlineMinus","GoPlus","onSubmit","event","_categories$find","preventDefault","selectedCategory","find","cat","categoryId","Notiflix","failure","transactionData","transactionDate","toISOString","split","Math","abs","parseFloat","postTransaction","closeAddModal","toggleDropdown","RiArrowDownWideFill","map","option","handleOptionClick","placeholder","target","value","DatePicker","selected","date","dateFormat","placeholderText","selectEditId","modal","transactionId","EditTransactionModal","incomeChecked","setIncomeChecked","expenseChecked","setExpenseChecked","transaction","trans","Date","toString","_categories$find2","editTransaction","closeEditModal","desktopChildren","mobileChildren","currencyPage","statisticsPage","isModalAddOpen","isModalEditOpen","selectisTransactionLoading","selectTransSummary","summary"],"sourceRoot":""}