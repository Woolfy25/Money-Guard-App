{"version":3,"file":"static/js/140.537f0019.chunk.js","mappings":"gKAGA,MAQA,EARmBA,IAA8B,IAA7B,KAAEC,EAAI,KAAEC,EAAI,QAAEC,GAASH,EACzC,OACEI,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAAA,EAAIC,KAAMN,KAAMA,EAAME,QAASA,EAAQK,SACvDN,GACM,C,iECJb,MAQA,EARwBF,IAA8B,IAA7B,KAAEC,EAAI,KAAEC,EAAI,QAAEC,GAASH,EAC9C,OACEI,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAAA,EAAIG,UAAWR,KAAMA,EAAME,QAASA,EAAQK,SAC5DN,GACM,C,qECNb,SAAgB,WAAa,iCAAiC,KAAO,2BAA2B,KAAO,2BAA2B,SAAW,+BAA+B,eAAiB,qCAAqC,MAAQ,4BAA4B,WAAa,iCAAiC,UAAY,gCAAgC,WAAa,iCAAiC,oBAAsB,0CAA0C,sBAAwB,4CAA4C,MAAQ,6B,oJCqB1hB,MAAMQ,EAAgBV,IAKf,IALgB,IACrBM,EAAG,kBACHK,EAAiB,yBACjBC,EAAwB,WACxBC,GACDb,EACC,MAAM,cAAEc,IAAkBC,EAAAA,EAAAA,MAQ1B,OACEC,EAAAA,EAAAA,MAAA,OAAKX,UAAWC,EAAIW,eAAeT,SAAA,EACjCJ,EAAAA,EAAAA,KAACc,EAAAA,GAAK,CACJb,UAAWC,EAAIa,MACfC,GAAG,WACHC,KAAK,WACLpB,KAAMU,EAAoB,OAAS,WACnCW,SAbwBC,IAC5B,MAAMC,EAAWD,EAAEE,OAAOC,MAC1BZ,EAAc,WAAYU,GAC1BV,EAAc,mBAAoBa,IAAOH,GAAUI,MAAM,EAWrDC,YAAY,cAEdzB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAY,CAACT,KAAK,WAAWU,UAAU,MAAM1B,UAAWC,EAAI0B,SAC7D5B,EAAAA,EAAAA,KAAC6B,EAAAA,IAAM,CAAC5B,UAAWC,EAAI4B,aACvB9B,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAI6B,WAAYhC,QAASS,EAAyBJ,SAChEG,GACCP,EAAAA,EAAAA,KAACgC,EAAAA,IAAO,CAAC/B,UAAWC,EAAI+B,yBAExBjC,EAAAA,EAAAA,KAACkC,EAAAA,IAAU,CAACjC,UAAWC,EAAIiC,yBAG/BnC,EAAAA,EAAAA,KAACoC,EAAqB,CAACC,SAAU5B,EAAYP,IAAKA,MAC9C,EAIJkC,EAAwBE,IAAwB,IAAvB,SAAED,EAAQ,IAAEnC,GAAKoC,EAC9C,MAAMC,EAAS,CACb,4BACA,MACA,SACA,SACA,SAGIC,EAAsB,GAAXH,EAAH,IAEd,OACErC,EAAAA,EAAAA,KAAA,OACEyC,MAAO,CACLD,MAAO,OACPE,gBAAiBH,EAAO,GACxBI,OAAQ,MACRC,aAAc,OACdxC,UAEFJ,EAAAA,EAAAA,KAAA,OACEyC,MAAO,CACLE,OAAQ,OACRH,MAAOA,EACPE,gBAAiBH,EAAOF,GACxBO,aAAc,MACdC,WAAY,6BAGZ,EAoJV,EAhJqBC,KACnB,MAAMC,GAAWC,EAAAA,EAAAA,OACVzC,EAAmB0C,IAAwBC,EAAAA,EAAAA,WAAS,GACrDC,GAAWC,EAAAA,EAAAA,MAEX5C,EAA2BA,KAC/ByC,GAAsB1C,EAAkB,EAGpC8C,EAAmBC,EAAAA,GAAW,CAClCC,SAAUD,EAAAA,KACPE,IAAI,EAAG,sCACPC,SAAS,oBACZC,MAAOJ,EAAAA,KACJI,MAAM,wBACND,SAAS,qBACZE,SAAUL,EAAAA,KACPE,IAAI,EAAG,0CACPC,SAAS,wBACZG,eAAgBN,EAAAA,KACbO,MAAM,CAACP,EAAAA,GAAQ,YAAa,MAAO,wBACnCG,SAAS,kCAGd,OACEzD,EAAAA,EAAAA,KAAC8D,EAAAA,GAAM,CACLC,cAAe,CACbR,SAAU,GACVG,MAAO,GACPC,SAAU,GACVC,eAAgB,IAElBP,iBAAkBA,EAClBW,SAAUA,CAACC,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EAC9B,MAAME,EAAe,CACnBb,SAAUU,EAAOV,SACjBG,MAAOO,EAAOP,MACdC,SAAUM,EAAON,UAGnBZ,GAASsB,EAAAA,EAAAA,IAASD,IACfE,MAAK,KACJC,IAAAA,OAAgBC,QAAQ,4BACxBL,GAAW,IAEZM,OAAO7C,IACN2C,IAAAA,OAAgBG,QAAQ,0CACxBC,QAAQ/C,MAAMA,EAAM,GACpB,EACJxB,SAEDwE,IAAA,IAAC,aAAEC,EAAY,OAAEZ,GAAQW,EAAA,OACxB5E,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAI4E,WAAW1E,UAC7BQ,EAAAA,EAAAA,MAACmE,EAAAA,GAAI,CAAC9E,UAAWC,EAAI8E,KAAK5E,SAAA,EACxBJ,EAAAA,EAAAA,KAAA,OACEiF,IAAKC,EACLC,IAAI,mBACJlF,UAAWC,EAAIgF,KACfE,QAAQ,UAEVxE,EAAAA,EAAAA,MAAA,OAAKX,UAAWC,EAAImF,SAASjF,SAAA,EAC3BQ,EAAAA,EAAAA,MAAA,OAAKX,UAAWC,EAAIW,eAAeT,SAAA,EACjCJ,EAAAA,EAAAA,KAACc,EAAAA,GAAK,CACJb,UAAWC,EAAIa,MACflB,KAAK,OACLmB,GAAG,WACHC,KAAK,WACLQ,YAAY,UAEdzB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAY,CACXT,KAAK,WACLU,UAAU,MACV1B,UAAWC,EAAI0B,SAEjB5B,EAAAA,EAAAA,KAACsF,EAAAA,IAAa,CAACrF,UAAWC,EAAI4B,gBAEhClB,EAAAA,EAAAA,MAAA,OAAKX,UAAWC,EAAIW,eAAeT,SAAA,EACjCJ,EAAAA,EAAAA,KAACc,EAAAA,GAAK,CACJb,UAAWC,EAAIa,MACflB,KAAK,OACLmB,GAAG,QACHC,KAAK,QACLQ,YAAY,WAEdzB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAY,CACXT,KAAK,QACLU,UAAU,MACV1B,UAAWC,EAAI0B,SAEjB5B,EAAAA,EAAAA,KAACuF,EAAAA,IAAW,CAACtF,UAAWC,EAAI4B,gBAE9B9B,EAAAA,EAAAA,KAACM,EAAa,CACZJ,IAAKA,EACLK,kBAAmBA,EACnBC,yBAA0BA,EAC1BC,WAAYwD,EAAOuB,oBAErB5E,EAAAA,EAAAA,MAAA,OAAKX,UAAWC,EAAIW,eAAeT,SAAA,EACjCJ,EAAAA,EAAAA,KAACc,EAAAA,GAAK,CACJb,UAAWC,EAAIa,MACfC,GAAG,iBACHC,KAAK,iBACLQ,YAAY,mBACZ5B,KAAMU,EAAoB,OAAS,cAErCP,EAAAA,EAAAA,KAAC0B,EAAAA,GAAY,CACXT,KAAK,iBACLU,UAAU,MACV1B,UAAWC,EAAI0B,SAEjB5B,EAAAA,EAAAA,KAAC6B,EAAAA,IAAM,CAAC5B,UAAWC,EAAI4B,aACvB9B,EAAAA,EAAAA,KAAA,QACEC,UAAWC,EAAI6B,WACfhC,QAASS,EAAyBJ,SAEjCG,GACCP,EAAAA,EAAAA,KAACgC,EAAAA,IAAO,CAAC/B,UAAWC,EAAI+B,yBAExBjC,EAAAA,EAAAA,KAACkC,EAAAA,IAAU,CAACjC,UAAWC,EAAIiC,+BAKnCvB,EAAAA,EAAAA,MAAA,OAAKX,UAAWC,EAAIuF,WAAWrF,SAAA,EAC7BJ,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CACT7F,KAAK,SACLC,KAAK,WACL6F,SAAUd,KAEZ7E,EAAAA,EAAAA,KAAC4F,EAAAA,EAAe,CACd/F,KAAK,SACLC,KAAK,SACLC,QAASA,KACPoD,EAAS,SAAS,WAKtB,GAED,C,kCCxOb,SAAgB,KAAO,sBAAsB,UAAY,2B","sources":["components/Buttons/MainButton.jsx","components/Buttons/SecondaryButton.jsx","webpack://money-guard-app/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.jsx","webpack://money-guard-app/./src/components/Buttons/Buttons.module.css?0481"],"sourcesContent":["import React from \"react\";\r\nimport css from \"./Buttons.module.css\";\r\n\r\nconst MainButton = ({ type, text, onClick }) => {\r\n  return (\r\n    <button className={css.main} type={type} onClick={onClick}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MainButton;\r\n","import React from \"react\";\r\nimport css from \"./Buttons.module.css\";\r\n\r\nconst SecondaryButton = ({ type, text, onClick }) => {\r\n  return (\r\n    <button className={css.secondary} type={type} onClick={onClick}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SecondaryButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"backgorund\":\"RegisterPage_backgorund__mmG2v\",\"form\":\"RegisterPage_form__UYA07\",\"logo\":\"RegisterPage_logo__X7XQZ\",\"divInput\":\"RegisterPage_divInput__TwRO3\",\"inputContainer\":\"RegisterPage_inputContainer__J2WA8\",\"input\":\"RegisterPage_input__aTof2\",\"divButtons\":\"RegisterPage_divButtons__UHBrc\",\"inputIcon\":\"RegisterPage_inputIcon__Zfrm7\",\"toggleIcon\":\"RegisterPage_toggleIcon__tHdAJ\",\"inputPasswordNormal\":\"RegisterPage_inputPasswordNormal__D2Bah\",\"inputPasswordReadable\":\"RegisterPage_inputPasswordReadable__ERE9P\",\"error\":\"RegisterPage_error__jj6Sz\"};","import React, { useState } from \"react\";\r\nimport logo from \"../../images/MoneyGuardLogo.png\";\r\nimport css from \"./RegisterPage.module.css\";\r\n\r\nimport { register } from \"../../redux/auth/operations\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport zxcvbn from \"zxcvbn\";\r\nimport Notiflix from \"notiflix\";\r\nimport { Formik, Form, Field, ErrorMessage, useFormikContext } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport MainButton from \"../../components/Buttons/MainButton\";\r\nimport SecondaryButton from \"../../components/Buttons/SecondaryButton\";\r\n\r\nimport { IoMailSharp } from \"react-icons/io5\";\r\nimport { MdLock } from \"react-icons/md\";\r\nimport { IoPersonSharp } from \"react-icons/io5\";\r\nimport { IoMdEyeOff } from \"react-icons/io\";\r\nimport { IoMdEye } from \"react-icons/io\";\r\n\r\nconst PasswordField = ({\r\n  css,\r\n  isPasswordVisible,\r\n  togglePasswordVisibility,\r\n  testResult,\r\n}) => {\r\n  const { setFieldValue } = useFormikContext();\r\n\r\n  const handlePasswordChange = (e) => {\r\n    const newValue = e.target.value;\r\n    setFieldValue(\"password\", newValue);\r\n    setFieldValue(\"passwordStrength\", zxcvbn(newValue).score);\r\n  };\r\n\r\n  return (\r\n    <div className={css.inputContainer}>\r\n      <Field\r\n        className={css.input}\r\n        id=\"password\"\r\n        name=\"password\"\r\n        type={isPasswordVisible ? \"text\" : \"password\"}\r\n        onChange={handlePasswordChange}\r\n        placeholder=\"Password\"\r\n      />\r\n      <ErrorMessage name=\"password\" component=\"div\" className={css.error} />\r\n      <MdLock className={css.inputIcon} />\r\n      <span className={css.toggleIcon} onClick={togglePasswordVisibility}>\r\n        {isPasswordVisible ? (\r\n          <IoMdEye className={css.inputPasswordReadable} />\r\n        ) : (\r\n          <IoMdEyeOff className={css.inputPasswordNormal} />\r\n        )}\r\n      </span>\r\n      <PasswordStrengthMeter strength={testResult} css={css} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PasswordStrengthMeter = ({ strength, css }) => {\r\n  const colors = [\r\n    \"rgba(255, 255, 255, 0.60)\",\r\n    \"red\",\r\n    \"orange\",\r\n    \"yellow\",\r\n    \"green\",\r\n  ];\r\n\r\n  const width = `${strength * 25}%`;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        backgroundColor: colors[0],\r\n        height: \"5px\",\r\n        borderRadius: \"5px\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n          width: width,\r\n          backgroundColor: colors[strength],\r\n          borderRadius: \"5px\",\r\n          transition: \"width 0.3s ease-in-out\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RegisterForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setIsPasswordVisible(!isPasswordVisible);\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    username: Yup.string()\r\n      .min(2, \"Name must be at least 2 characters\")\r\n      .required(\"Name is required\"),\r\n    email: Yup.string()\r\n      .email(\"Invalid email format\")\r\n      .required(\"Email is required\"),\r\n    password: Yup.string()\r\n      .min(6, \"Password must be at least 6 characters\")\r\n      .required(\"Password is required\"),\r\n    verifyPassword: Yup.string()\r\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n      .required(\"Please confirm your password\"),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        verifyPassword: \"\",\r\n      }}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values, { resetForm }) => {\r\n        const submitValues = {\r\n          username: values.username,\r\n          email: values.email,\r\n          password: values.password,\r\n        };\r\n\r\n        dispatch(register(submitValues))\r\n          .then(() => {\r\n            Notiflix.Notify.success(\"Registration successful!\");\r\n            resetForm();\r\n          })\r\n          .catch((error) => {\r\n            Notiflix.Notify.failure(\"Registration failed. Please try again.\");\r\n            console.error(error);\r\n          });\r\n      }}\r\n    >\r\n      {({ isSubmitting, values }) => (\r\n        <div className={css.backgorund}>\r\n          <Form className={css.form}>\r\n            <img\r\n              src={logo}\r\n              alt=\"Money Guard Logo\"\r\n              className={css.logo}\r\n              loading=\"lazy\"\r\n            />\r\n            <div className={css.divInput}>\r\n              <div className={css.inputContainer}>\r\n                <Field\r\n                  className={css.input}\r\n                  type=\"text\"\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  placeholder=\"Name\"\r\n                />\r\n                <ErrorMessage\r\n                  name=\"username\"\r\n                  component=\"div\"\r\n                  className={css.error}\r\n                />\r\n                <IoPersonSharp className={css.inputIcon} />\r\n              </div>\r\n              <div className={css.inputContainer}>\r\n                <Field\r\n                  className={css.input}\r\n                  type=\"text\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                />\r\n                <ErrorMessage\r\n                  name=\"email\"\r\n                  component=\"div\"\r\n                  className={css.error}\r\n                />\r\n                <IoMailSharp className={css.inputIcon} />\r\n              </div>\r\n              <PasswordField\r\n                css={css}\r\n                isPasswordVisible={isPasswordVisible}\r\n                togglePasswordVisibility={togglePasswordVisibility}\r\n                testResult={values.passwordStrength}\r\n              />\r\n              <div className={css.inputContainer}>\r\n                <Field\r\n                  className={css.input}\r\n                  id=\"verifyPassword\"\r\n                  name=\"verifyPassword\"\r\n                  placeholder=\"Confirm password\"\r\n                  type={isPasswordVisible ? \"text\" : \"password\"}\r\n                />\r\n                <ErrorMessage\r\n                  name=\"verifyPassword\"\r\n                  component=\"div\"\r\n                  className={css.error}\r\n                />\r\n                <MdLock className={css.inputIcon} />\r\n                <span\r\n                  className={css.toggleIcon}\r\n                  onClick={togglePasswordVisibility}\r\n                >\r\n                  {isPasswordVisible ? (\r\n                    <IoMdEye className={css.inputPasswordReadable} />\r\n                  ) : (\r\n                    <IoMdEyeOff className={css.inputPasswordNormal} />\r\n                  )}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className={css.divButtons}>\r\n              <MainButton\r\n                type=\"Submit\"\r\n                text=\"REGISTER\"\r\n                disabled={isSubmitting}\r\n              />\r\n              <SecondaryButton\r\n                type=\"Button\"\r\n                text=\"LOG IN\"\r\n                onClick={() => {\r\n                  navigate(\"/login\");\r\n                }}\r\n              />\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Buttons_main__GGBqx\",\"secondary\":\"Buttons_secondary__wTkPt\"};"],"names":["_ref","type","text","onClick","_jsx","className","css","main","children","secondary","PasswordField","isPasswordVisible","togglePasswordVisibility","testResult","setFieldValue","useFormikContext","_jsxs","inputContainer","Field","input","id","name","onChange","e","newValue","target","value","zxcvbn","score","placeholder","ErrorMessage","component","error","MdLock","inputIcon","toggleIcon","IoMdEye","inputPasswordReadable","IoMdEyeOff","inputPasswordNormal","PasswordStrengthMeter","strength","_ref2","colors","width","style","backgroundColor","height","borderRadius","transition","RegisterForm","dispatch","useDispatch","setIsPasswordVisible","useState","navigate","useNavigate","validationSchema","Yup","username","min","required","email","password","verifyPassword","oneOf","Formik","initialValues","onSubmit","values","_ref3","resetForm","submitValues","register","then","Notiflix","success","catch","failure","console","_ref4","isSubmitting","backgorund","Form","form","src","logo","alt","loading","divInput","IoPersonSharp","IoMailSharp","passwordStrength","divButtons","MainButton","disabled","SecondaryButton"],"sourceRoot":""}